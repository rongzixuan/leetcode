"""
给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。

说明：

你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？
"""

class Solution:
    def singleNumber(self, nums: List[int]) -> int:


        # 方法一：位运算
        # 时间复杂度：O(n)
        # 空间复杂度：O(1)
        res = 0

        for num in nums:
            res ^= num

        return res
