"""
写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：

F(0) = 0,   F(1) = 1
F(N) = F(N - 1) + F(N - 2), 其中 N > 1.
斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。

答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1

"""

class Solution:
    def fib(self, n: int) -> int:


        # 方法一：动态规划
        # 时间复杂度：O(n)
        # 空间复杂度：O(n)
        """MOD = 10 ** 9 + 7

        if n == 0 or n == 1:
            return n

        dp = [0] * (n+1)
        dp[1] = 1

        for i in range(2, n+1):
            dp[i] = dp[i-2] + dp[i-1]

        return dp[n] % MOD"""



        # 方法二：动态规划
        # 时间复杂度：O(n)
        # 空间复杂度：O(1)
        MOD = 10 ** 9 + 7

        if n == 0 or n == 1:
            return n

        a, b, c = 0, 1, 1

        for i in range(1, n+1):
            a, b, c = b, c, b + c
            #print(a, b, c)

        return a % MOD
