"""
二进制数转字符串。给定一个介于0和1之间的实数（如0.72），类型为double，打印它的二进制表达式。如果该数字无法精确地用32位以内的二进制表示，则打印“ERROR”。

示例1:
 输入：0.625
 输出："0.101"
 
示例2:
 输入：0.1
 输出："ERROR"
 提示：0.1无法被二进制准确表示
 
提示：
32位包括输出中的 "0." 这两位。
题目保证输入用例的小数位数最多只有 6 位

"""

class Solution:
    def printBin(self, num: float) -> str:


        # 方法一：进制转换
        # 时间复杂度：O(C)
        # 空间复杂度：O(C)
        # C = 32
        """
        十进制小数转二进制小数的方法是：小数部分乘以 2，取整数部分作为二进制小数的下一位，小数部分作为下一次乘法的被乘数，直到小数部分为 0 或者二进制小数的长度超过 32 位。

我们不妨举个例子，比如说我们要将 0.8125 转换为二进制小数，过程如下：
0.8125 × 2 = 1.625 取整数部分 1
0.625 × 2 = 1.25 取整数部分 1
0.25 × 2 = 0.5 取整数部分 0
0.5 × 2 = 1 取整数部分 1
​
所以十进制小数 0.8125 的二进制小数表示为 
0.110
1(2)0.1101 
 。
        """
        ans = '0.'
        while len(ans) < 32 and num:
            num *= 2
            x = int(num)
            ans += str(x)
            num -= x
        return 'ERROR' if num else ans




