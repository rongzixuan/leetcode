"""
复数 可以用字符串表示，遵循 "实部+虚部i" 的形式，并满足下述条件：

实部 是一个整数，取值范围是 [-100, 100]
虚部 也是一个整数，取值范围是 [-100, 100]
i2 == -1
给你两个字符串表示的复数 num1 和 num2 ，请你遵循复数表示形式，返回表示它们乘积的字符串。


示例 1：
输入：num1 = "1+1i", num2 = "1+1i"
输出："0+2i"
解释：(1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i ，你需要将它转换为 0+2i 的形式。

示例 2：
输入：num1 = "1+-1i", num2 = "1+-1i"
输出："0+-2i"
解释：(1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i ，你需要将它转换为 0+-2i 的形式。 
 

提示：
num1 和 num2 都是有效的复数表示。

"""


class Solution:
    def complexNumberMultiply(self, num1: str, num2: str) -> str:


        # 方法一：模拟
        # 时间复杂度：O(1)
        # 空间复杂度：O(1)
        x1, y1 = num1.split('+')
        x1, y1 = int(x1), int(y1[:-1])
        x2, y2 = num2.split('+')
        x2, y2 = int(x2), int(y2[:-1])
        #print(x1, y1, x2, y2)

        return str(x1 * x2 - y1 * y2) + '+' + str(x1 * y2 + x2 * y1) + 'i'
    
    
    
