"""
给你一个正整数数组 arr 。请你对 arr 执行一些操作（也可以不进行任何操作），使得数组满足以下条件：

arr 中 第一个 元素必须为 1 。
任意相邻两个元素的差的绝对值 小于等于 1 ，也就是说，对于任意的 1 <= i < arr.length （数组下标从 0 开始），都满足 abs(arr[i] - arr[i - 1]) <= 1 。abs(x) 为 x 的绝对值。
你可以执行以下 2 种操作任意次：

减小 arr 中任意元素的值，使其变为一个 更小的正整数 。
重新排列 arr 中的元素，你可以以任意顺序重新排列。
请你返回执行以上操作后，在满足前文所述的条件下，arr 中可能的 最大值 。
"""


class Solution:
    def maximumElementAfterDecrementingAndRearranging(self, arr: List[int]) -> int:


        # 方法一：排序+贪心
        """arr.sort()
        #print(arr)

        n = len(arr)

        pre = 0
        for i in range(n):
            if arr[i] - pre > 1:
                arr[i] = pre + 1
            pre = arr[i]

        #print(arr)
        return arr[n-1]"""


        # 方法二：计数+贪心
        n = len(arr)
        cnt = [0] * (n+1)

        for i in range(n):
            cnt[min(n, arr[i])] += 1
        #print(cnt)

        miss = 0
        for i in range(1, n+1):
            if cnt[i] == 0:
                miss += 1
            else:
                miss -= min(miss, cnt[i] - 1)

        return n - miss
